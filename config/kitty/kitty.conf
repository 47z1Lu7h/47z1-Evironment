# vim:fileencoding=utf-8:ft=conf
# Font family. You can also specify different fonts for the
# bold/italic/bold-italic variants. By default they are derived automatically,
# by the OSes font system. Setting them manually is useful for font families
# that have many weight variants like Book, Medium, Thick, etc. For example:
# font_family Operator Mono Book
# bold_font Operator Mono Thick
# bold_italic_font Operator Mono Medium
# font_family      Input Mono
#include			./color.ini
font_family			Iosevka Term
italic_font			Iosevka Term Thin Italic Nerd Font Complete
bold_font			Iosevka Term Heavy Nerd Font Complete
bold_italic_font		Iosevka Term Bold Italic Nerd Font Complete

# Font size (in pts)
font_size			14
background_opacity		0.9
background_image		none
dynamic_background_opacity	yes

modify_font underline_position -1
modify_font underline_thickness 130%
modify_font strikethrough_position 3px

modify_font cell_width 80%
modify_font cell_height -2px
modify_font baseline 2

box_drawing_scale 0.001, 1, 1.5, 2
undercurl_style thin-sparse

font_features UnifontMedium +isol -medi -fina -init

# If enabled, the window size will be remembered so that new instances of kitty will have the same
# size as the previous instance. If disabled, the window will initially have size configured
# by initial_window_width/height, in pixels.
remember_window_size		yes
initial_window_width		2558
initial_window_height		1600
draw_minimal_borders		yes

# The width (in pts) of window borders. Will be rounded to the nearest number of pixels based on screen resolution.
window_border_width		0.3pt
window_margin_width		0
window_padding_width		15

placement_strategy		center

active_border_color
inactive_border_color 

# Delay (in milliseconds) between screen updates. Decreasing it, increases fps
# at the cost of more CPU usage. The default value yields ~100fps which is more
# that sufficient for most uses.
repaint_delay			5

# Delay (in milliseconds) before input from the program running in the terminal
# is processed. Note that decreasing it will increase responsiveness, but also
# increase CPU usage and might cause flicker in full screen programs that
# redraw the entire screen on each loop, because kitty is so fast that partial
# screen updates will be drawn.
input_delay			5

# Visual bell duration. Flash the screen when a bell occurs for the specified number of
# seconds. Set to zero to disable.
visual_bell_duration		0
# Enable/disable the audio bell. Useful in environments that require silence.
enable_audio_bell		no
bell_on_tab			" ðŸ”” "
window_alert_on_bell		yes


#: The style with which undercurls are rendered. This option takes the
#: form (thin|thick)-(sparse|dense). Thin and thick control the
#: thickness of the undercurl. Sparse and dense control how often the
#: curl oscillates. With sparse the curl will peak once per character,
#: with dense twice.
#: }}}
detect_urls			yes
allow_hyperlinks		yes
show_hyperlink_targets		yes
url_prefixes			file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh
url_color			#0087bd
url_style			curly
open_url_with			default

# The value of the TERM environment variable to set
term				xterm-kitty

# Symbol mapping (special font for specified unicode code points). Map the
# specified unicode codepoints to a particular font. Useful if you need special
# rendering for some symbols, such as for Powerline. Avoids the need for
# patched fonts. Each unicode code point is specified in the form U+<code point
# in hexadecimal>. You can specify multiple code points, separated by commas
# and ranges separated by hyphens. symbol_map itself can be specified multiple times.
# Syntax is:
# symbol_map codepoints Font Family Name
# For example:
symbol_map			U+E0A0-U+E0A2,U+E0B0-U+E0B3 PowerlineSymbols
narrow_symbols			U+E0A0-U+E0A3,U+E0C0-U+E0C7 1
hide_window_decorations		no
allow_remote_control		yes
sync_to_monitor			yes

# Logo
window_logo_path		logos/HTB.png
window_logo_position		bottom-right
window_logo_alpha		0.2
disable_ligatures		never

# The 16 terminal colors. There are 8 basic colors, each color has a dull and
# bright version.
# sugesttions
color0				#2f2f2f
color8				#CDCDCD
# errors
color1				#FF0000
color9				#FF0000
# writeing
color2				#FF9F00
color10				#FF9F00
# warns
color3				#FFA819
color11				#FFA819
# carpetas
color4				#7C96FF
color12				#7C96FF
# archivos
color5				#FFa
color13				#FFB87C
# extra
color6				#43daff
color14				#43d4ff
# white
color7				#c0b18b
color15				#d8d8d8

# The foreground color
foreground			#ACFF7C
# The background color
background			#010101
# The foreground for selections
selection_foreground		#2f2f2f
# The background for selections
selection_background		#d75f5f

# The cursor color
cursor				#66FF66
cursor_text_color		#FF0800
# The cursor shape can be one of (block, beam, underline)
cursor_shape			beam
cursor_beam_thickness		2
pointer_shape_when_dragging	beam
pointer_shape_when_grabbed	arrow
default_pointer_shape		beam

# The interval (in seconds) at which to blink the cursor. Set to zero to
# disable blinking.
cursor_blink_interval		1
# Stop blinking cursor after the specified number of seconds of keyboard inactivity. Set to
# zero or a negative number to never stop blinking.
cursor_stop_blinking_after	10.0
# Number of lines of history to keep in memory for scrolling back
scrollback_lines		500000
scrollback_pager_history_size	100
# Program with which to view scrollback in a new window. The scrollback buffer is passed as
# STDIN to this program. If you change it, make sure the program you use can
# handle ANSI escape sequences for colors and text formatting.
scrollback_pager		less +G -R
# Wheel scroll multiplier (modify the amount scrolled by the mouse wheel)
wheel_scroll_multiplier		2.0
# The interval between successive clicks to detect double/triple clicks (in seconds)
click_interval			0.5
focus_follows_mouse		yes

# Characters considered part of a word when double clicking. In addition to these characters
# any character that is marked as an alpha-numeric character in the unicode
# database will be matched.
select_by_word_characters	:@-./_~?&=%+#

# Remove spaces at the end of lines when copying to clipboard. A value of smart will do it when using normal selections, 
# but not rectangle selections. A value of always will always do it.
strip_trailing_spaces		never

# Hide mouse cursor after the specified number of seconds of the mouse not being used. Set to
# zero or a negative number to disable mouse cursor hiding.
mouse_hide_wait			2.0

# Key mapping
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html

# Miscellaneous Configs : 
map ctrl++			increase_font_size
map ctrl+-			decrease_font_size
# Reset all windows in the tab to default sizes
map ctrl+shift+backspace	restore_font_size

# Background Opacity
map ctrl+shift++		set_background_opacity +0.1
map ctrl+shift+-		set_background_opacity -0.1
map ctrl+shift+p		set_background_opacity default


# Clipboard
copy_on_select			yes
map alt+c			copy_to_clipboard
map alt+v			paste_from_clipboard
map shift+ctrl+v		paste_from_clipboard
map shift+ctrl+c		copy_from_clipboard
map f1				copy_to_buffer a
map f2				paste_from_buffer a
map f3				copy_to_buffer b
map f4				paste_from_buffer b
map f5                          copy_to_buffer c
map f6                          paste_from_buffer c

# Scrolling
wheel_scroll_min_lines		1
touch_scroll_multiplier		2.0
map alt+shift+			scroll_line_up
map alt+shift+			scroll_line_down
map alt+shift+			scroll_line_up
map alt+shift+			scroll_line_down
map alt+shift+page_up		scroll_page_up
map alt+shift+page_down		scroll_page_down
map alt+shift+home		scroll_home
map alt+shift+end		scroll_end
map alt+shift+h			show_scrollback

# Window management
map alt+shift+enter		new_window
map alt+enter			new_window_with_cwd
map alt+q			close_window
map shift+left			resize_window narrower 
map shift+right			resize_window wider 
map shift+up			resize_window taller 
map shift+down			resize_window shorter 
map alt+home			resize_window reset
window_resize_step_cells	2
window_resize_step_lines	2

# reset all windows in the tab to default sizes
map alt+left			neighboring_window left
map alt+right			neighboring_window right
map alt+up			neighboring_window up
map alt+down			neighboring_window down

# Tab management
map alt+1			goto_tab 1
map alt+2			goto_tab 2
map alt+3			goto_tab 3
map alt+4			goto_tab 4
map alt+5			goto_tab 5
map alt+6			goto_tab 6
map alt+7			goto_tab 7
map alt+8			goto_tab 8
map alt+9			goto_tab 9

map tab_bar_align		
map alt+e			set_tab_title
map alt+shift+w			new_tab
map alt+w			new_tab_with_cwd
map alt+shift+right		next_tab
map alt+shift+left		previous_tab

map alt+a			next_layout
map alt+z			swap_with_window
map				goto_layout Grid
map alt+d			toggle_layout Stack
map				goto_layout Tall

map				move_window_to_top
map alt+s			last_used_layout
map				toggle_layout 
map				toggle_maximized

# Color configs
map alt+shift+1			set_colors --configured 
map alt+shift+2			set_colors --configured 

# Tab-bar colors
active_tab_foreground		#93E081
active_tab_background		#011a1b
active_tab_font_style		italic
inactive_tab_foreground		#797878
inactive_tab_background		#011a1b
inactive_tab_font_style		bold
tab_bar_background		none
tab_bar_margin_color		none

tab_bar_margin_width		0.0
tab_bar_margin_height		0.0 0.0 
tab_bar_style			fade
active_tab_font_style		Iosevka Term Heavy
tab_fade			0.10 0.15 0.20 0.30 0.35 0.40 0.45 0.50 0.55 0.60 0.65 0.70 0.75 0.80 0.85 0.90 0.95 1
tab_bar_min_tabs		0
tab_activity_symbol		
tab_title_template		{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title}


# The enabled window layouts. A comma separated list of layout names. The special value * means
# all layouts. The first listed layout will be used as the startup layout.
# List of available layouts: Stack - Tall - Fat - Grid - Splits - Horizontal - Vertical 
enabled_layouts Grid, Fat, Tall, Stack

# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.
# No maping keys
map				no_op
